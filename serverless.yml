service: key-value-store-api

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  # テスト環境でのServerless認証をスキップする設定
  disableAuthCheck: ${env:DISABLE_AUTH_CHECK, true}
  dynamodb:
    stages:
      - dev
      - prod
    start:
      port: 8000
      inMemory: true
      migrate: true
    seed:
      domain:
        sources:
          - table: ${env:TABLE_NAME, 'KeyValueStore'}
            sources: [./scripts/seed-data.json]
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ['aws-sdk']
    target: 'node22'
    platform: 'node'
    concurrency: 10
    tsconfig: 'tsconfig.json'
    watch:
      pattern: ['src/**/*.ts', 'tests/**/*.ts']
      ignore: ['node_modules/**/*', '.esbuild/**/*']

provider:
  name: aws
  runtime: nodejs22.x
  stage: ${env:STAGE, 'v1'}
  region: ${env:AWS_REGION, 'ap-northeast-1'}
  apiGateway:
    apiKeys:
      - KeyValueStoreApiKey
  environment:
    TTL_ENABLED: ${env:TTL_ENABLED, 'true'}
    DEFAULT_TTL: ${env:DEFAULT_TTL, '86400'}
    TABLE_NAME: ${env:TABLE_NAME, 'KeyValueStore'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - Fn::GetAtt: [DynamoDBTable, Arn]

functions:
  getItem:
    handler: src/handlers/getItem.getItemHandler
    events:
      - http:
          path: item/{key}
          method: get
          private: true
          cors: true

  putItem:
    handler: src/handlers/putItem.putItemHandler
    events:
      - http:
          path: item/{key}
          method: put
          private: true
          cors: true

  deleteItem:
    handler: src/handlers/deleteItem.deleteItemHandler
    events:
      - http:
          path: item/{key}
          method: delete
          private: true
          cors: true

  extractAndStoreCode:
    handler: src/handlers/extractAndStoreCode.extractAndStoreCodeHandler
    events:
      - http:
          path: extractCode/{key}
          method: post
          private: true
          cors: true

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:TABLE_NAME, 'KeyValueStore'}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
